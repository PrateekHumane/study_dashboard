[{"/home/roland/study_dashboard/src/index.tsx":"1","/home/roland/study_dashboard/src/reportWebVitals.ts":"2","/home/roland/study_dashboard/src/App.tsx":"3","/home/roland/study_dashboard/src/api/index.ts":"4","/home/roland/study_dashboard/src/pages/User/index.tsx":"5","/home/roland/study_dashboard/src/pages/Landing/index.tsx":"6","/home/roland/study_dashboard/src/pages/Leaderboard/index.tsx":"7","/home/roland/study_dashboard/src/api/gql/index.ts":"8","/home/roland/study_dashboard/src/pages/User/UserInsights.tsx":"9","/home/roland/study_dashboard/src/pages/User/UserTodos.tsx":"10","/home/roland/study_dashboard/src/pages/User/UserStats.tsx":"11","/home/roland/study_dashboard/src/api/gql/getLeaderboard.ts":"12","/home/roland/study_dashboard/src/api/gql/getUserStats.ts":"13","/home/roland/study_dashboard/src/pages/Leaderboard/Test.tsx":"14","/home/roland/study_dashboard/src/pages/User/UserSearch.tsx":"15"},{"size":1074,"mtime":1613959284988,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1611947749583,"results":"18","hashOfConfig":"17"},{"size":2378,"mtime":1614458815421,"results":"19","hashOfConfig":"17"},{"size":276,"mtime":1613959284988,"results":"20","hashOfConfig":"17"},{"size":626,"mtime":1614458815421,"results":"21","hashOfConfig":"17"},{"size":375,"mtime":1612911316954,"results":"22","hashOfConfig":"17"},{"size":599,"mtime":1614458797011,"results":"23","hashOfConfig":"17"},{"size":120,"mtime":1613959284988,"results":"24","hashOfConfig":"17"},{"size":543,"mtime":1611947749583,"results":"25","hashOfConfig":"17"},{"size":534,"mtime":1611947749583,"results":"26","hashOfConfig":"17"},{"size":3830,"mtime":1613959284988,"results":"27","hashOfConfig":"17"},{"size":242,"mtime":1613959284988,"results":"28","hashOfConfig":"17"},{"size":454,"mtime":1613959284988,"results":"29","hashOfConfig":"17"},{"size":6081,"mtime":1614458815421,"results":"30","hashOfConfig":"17"},{"size":2414,"mtime":1614458815421,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xy44pr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/roland/study_dashboard/src/index.tsx",[],["68","69","70","71","72","73","74","75"],"/home/roland/study_dashboard/src/reportWebVitals.ts",[],"/home/roland/study_dashboard/src/App.tsx",["76","77","78","79","80","81","82"],"import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport UserPage from './pages/User';\nimport Landing from './pages/Landing';\nimport Leaderboard from './pages/Leaderboard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navButton: {\n    textTransform: 'none',\n    margin: '0px 10px',\n    fontSize: '14px'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const preventDefault = (event) => event.preventDefault();\n\n  return (\n    <div className=\"{classes.root}\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n              </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            Study Together\n          </Typography>\n          {/* <Typography>Leaderboard</Typography>\n              <Typography>Leaderboard</Typography>\n              <Typography>Leaderboard</Typography> */}\n          {/* <Link component=\"button\" href=\"/leaderboard\" onClick={preventDefault}>Leaderboard</Link>\n              <Link component=\"button\" href=\"/users\" onClick={preventDefault}>Users</Link>\n              <Link component=\"button\" href=\"/rules\" onClick={preventDefault}>Rules</Link> */}\n          <Button component={Link} to=\"/leaderboard\" className={classes.navButton}>Leaderboard</Button>\n          <Button component={Link} to=\"/users\" className={classes.navButton}>User Stats</Button>\n          <Button component={Link} to=\"/rules\" className={classes.navButton}>Rules</Button>\n        </Toolbar>\n      </AppBar>\n\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route\n          path=\"/user\"\n          component={UserPage}\n        />\n        <Route\n          path=\"/leaderboard\"\n          component={Leaderboard}\n        />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/roland/study_dashboard/src/api/index.ts",[],"/home/roland/study_dashboard/src/pages/User/index.tsx",[],"/home/roland/study_dashboard/src/pages/Landing/index.tsx",[],"/home/roland/study_dashboard/src/pages/Leaderboard/index.tsx",["83","84"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Leaderboard } from './Test';\n\nfunction UserPage() {\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    fetch('leaderboard?offset=0&limit=15&time_interval=pastWeek').then(response =>\n      response.json().then(data => {\n        setLeaderboard(data);\n      })\n    );\n  }, []);\n\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Leaderboard leaderboard={leaderboard} />\n    </Container>\n  );\n}\n\nexport default UserPage;\n","/home/roland/study_dashboard/src/api/gql/index.ts",[],"/home/roland/study_dashboard/src/pages/User/UserInsights.tsx",[],["85","86","87","88","89","90","91","92"],"/home/roland/study_dashboard/src/pages/User/UserTodos.tsx",[],"/home/roland/study_dashboard/src/pages/User/UserStats.tsx",["93"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { useParams } from 'react-router-dom';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalRectSeries, LineSeries } from 'react-vis';\nimport { useQuery } from '@apollo/client';\nimport { getUserStats } from '../../api';\n\ninterface ParamTypes {\n  userId: string\n}\n\n// display all time user studying\n// display this month user studying\n// display todays user studying\n// show line graph with user studying for this week, that can be scopped to other times\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst timestamp = new Date('May 23 2017').getTime();\nconst ONE_DAY = 86400000;\n\n/* const DATA : any[] = [\n *   { x0: ONE_DAY * 2, x: ONE_DAY * 3, y: 1 },\n *   { x0: ONE_DAY * 7, x: ONE_DAY * 8, y: 1 },\n *   { x0: ONE_DAY * 8, x: ONE_DAY * 9, y: 1 },\n *   { x0: ONE_DAY * 9, x: ONE_DAY * 10, y: 2 },\n *   { x0: ONE_DAY * 10, x: ONE_DAY * 11, y: 2.2 },\n *   { x0: ONE_DAY * 19, x: ONE_DAY * 20, y: 1 },\n *   { x0: ONE_DAY * 20, x: ONE_DAY * 21, y: 2.5 },\n *   { x0: ONE_DAY * 21, x: ONE_DAY * 24, y: 1 }\n * ].map(el => ({ x0: el.x0 + timestamp, x: el.x + timestamp, y: el.y }));\n *  */\n\n\n\nfunction sma(arr : any[], range : number, format : any) {\n  if (!Array.isArray(arr)) {\n    throw TypeError('expected first argument to be an array');\n  }\n\n  const fn : any = typeof format === 'function' ? format : toFixed;\n  const num = range || arr.length;\n  const res : any[] = [];\n  const len = arr.length + 1;\n  let idx = num - 1;\n  while ((idx += 1) < len) {\n    res.push(fn(avg(arr, idx, num)));\n  }\n  return res;\n}\n\n/**\n * Create an average for the specified range.\n *\n * ```js\n * console.log(avg([1, 2, 3, 4, 5, 6, 7, 8, 9], 5, 4));\n * //=> 3.5\n * ```\n * @param  {Array} `arr` Array to pull the range from.\n * @param  {Number} `idx` Index of element being calculated\n * @param  {Number} `range` Size of range to calculate.\n * @return {Number} Average of range.\n */\n\nfunction avg(arr : any[], idx : number, range : number) {\n  return sum(arr.slice(idx - range, idx)) / range;\n}\n\n/**\n * Calculate the sum of an array.\n * @param  {Array} `arr` Array\n * @return {Number} Sum\n */\n\nfunction sum(arr : any[]) {\n  let len = arr.length;\n  let num = 0;\n  while (len) {\n    len -= 1;\n    num += Number(arr[len]);\n  }\n  return num;\n}\n\n/**\n * Default format method.\n * @param  {Number} `n` Number to format.\n * @return {String} Formatted number.\n */\n\nfunction toFixed(n : any) {\n  return n.toFixed(2);\n}\n\nconst hourdata = [1, 1, 1, 2, 2.2, 1, 2.5];\n\nconst DATA : any[] = hourdata.map((el, index) => (\n  { x0: index * ONE_DAY + timestamp,\n    x: (index + 1) * ONE_DAY + timestamp,\n    y: el }));\n\n\nconst MovingAverageData : any[] = sma(DATA, 3, undefined);\n\nconst formattedMovingData : any[] = MovingAverageData.map((el, index) => (\n  { x: (index + 3) * ONE_DAY + timestamp, y: el }\n));\n\nfunction UserStats() {\n  const { userId } = useParams<ParamTypes>();\n\n  const { loading, error, data } = useQuery(getUserStats);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  if (data) console.log(data);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography>This is the user stats page for {userId}</Typography>\n      </Box>\n      <XYPlot\n        xDomain={[timestamp, timestamp + 7 * ONE_DAY]}\n        yDomain={[0.1, 2.1]}\n        xType=\"time\"\n        width={300}\n        height={300}\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalRectSeries data={DATA} style={{ stroke: '#fff' }} />\n        <LineSeries data={formattedMovingData} />\n      </XYPlot>\n    </Container>\n  );\n}\n\nexport default UserStats;\n","/home/roland/study_dashboard/src/api/gql/getLeaderboard.ts",[],"/home/roland/study_dashboard/src/api/gql/getUserStats.ts",[],"/home/roland/study_dashboard/src/pages/Leaderboard/Test.tsx",["94"],"import React from 'react';\nimport {\n  createStyles,\n  lighten,\n  makeStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n \nconst limit = 4;\n \ninterface Data {\n  rank: number;\n  discord_user_id: number;\n  study_time: number;\n}\n \nfunction createData(\n  rank: number,\n  discord_user_id: number,\n  study_time: number\n): Data {\n  return { rank, discord_user_id, study_time };\n}\n \ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n \nconst headCells: HeadCell[] = [\n  { id: 'rank', numeric: true, disablePadding: true, label: 'Rank' },\n  { id: 'discord_user_id', numeric: true, disablePadding: false, label: 'Discord User Id' },\n  { id: 'study_time', numeric: true, disablePadding: false, label: 'Study Time' },\n];\n \nfunction EnhancedTableHead() {\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? 'none' : 'default'}\n          >\n            {headCell.id}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n \nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n       theme.palette.type === 'light'\n         ? {\n           color: theme.palette.secondary.main,\n           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n         }\n         : {\n           color: theme.palette.text.primary,\n           backgroundColor: theme.palette.secondary.dark,\n         },\n    title: {\n      flex: '1 1 100%',\n    },\n  })\n);\n \nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '75%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 500,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  })\n);\n \nconst Leaderboard = ({ leaderboard }) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n \n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n \n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n \n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n<<<<<<< HEAD\n\n  const rows = leaderboard.map((user : Data) => (\n=======\n \n  const rows = leaderboard.map((user) => (\n>>>>>>> 797a43d0411511c11bcd59526eeba996db419310\n    createData(\n      user.rank,\n      user.discord_user_id,\n      user.study_time\n    ))\n  );\n<<<<<<< HEAD\n\n  console.log(rows);\n\n=======\n \n>>>>>>> 797a43d0411511c11bcd59526eeba996db419310\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n \n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead />\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: Data, index: number) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n \n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.rank}\n                    >\n                      <TableCell align=\"center\" component=\"th\" scope=\"row\" padding=\"none\">\n                         {row.rank}\n                       </TableCell>\n                      <TableCell align=\"center\">{row.discord_user_id}</TableCell>\n                      <TableCell align=\"center\">{row.study_time}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n              <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n};\n\n\nexport default Leaderboard;\n","/home/roland/study_dashboard/src/pages/User/UserSearch.tsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":18},{"ruleId":"115","severity":1,"message":"112","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":18},{"ruleId":"111","severity":1,"message":"116","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"111","severity":1,"message":"117","line":33,"column":9,"nodeType":"113","messageId":"114","endLine":33,"endColumn":23},{"ruleId":"115","severity":1,"message":"117","line":33,"column":9,"nodeType":"113","messageId":"114","endLine":33,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":50,"column":1,"nodeType":"120","messageId":"121","endLine":50,"endColumn":95},{"ruleId":"111","severity":1,"message":"122","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":11},{"ruleId":"115","severity":1,"message":"122","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":11},{"ruleId":"95","replacedBy":"123"},{"ruleId":"97","replacedBy":"124"},{"ruleId":"99","replacedBy":"125"},{"ruleId":"101","replacedBy":"126"},{"ruleId":"103","replacedBy":"127"},{"ruleId":"105","replacedBy":"128"},{"ruleId":"107","replacedBy":"129"},{"ruleId":"109","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":118,"column":13,"nodeType":"133","messageId":"134","endLine":118,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"135","line":140,"column":0},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["138"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'MenuIcon' is defined but never used.","'preventDefault' is assigned a value but never used.","max-len","This line has a length of 94. Maximum allowed is 80.","Program","max","'Box' is defined but never used.",["136"],["137"],[],["138"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","Parsing error: Merge conflict marker encountered.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]